{"version":3,"sources":["../src/base-dotlottie-react.tsx","../src/dotlottie.tsx","../src/dotlottie-worker.tsx","../src/index.ts"],"names":["BaseDotLottieReact","animationId","autoplay","backgroundColor","className","createDotLottie","data","dotLottieRefCallback","layout","loop","mode","playOnHover","renderConfig","segment","speed","src","stateMachineConfig","stateMachineId","style","themeData","themeId","useFrameInterpolation","workerId","props","dotLottieRef","useRef","canvasRef","dotLottieRefCallbackRef","config","configRef","setCanvasRef","useCallback","canvas","useEffect","handlePlayOnHover","event","jsx","DotLottie","DotLottieReact","createDotLottieWorker","DotLottieWorker","DotLottieWorkerReact","setWasmUrl","url"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable no-warning-comments */\n'use client';\n\nimport type { Config, DotLottie, DotLottieWorker } from '@lottiefiles/dotlottie-web';\nimport { useEffect, useCallback, useRef, type ComponentProps, type RefCallback, type JSX } from 'react';\n\nexport type BaseDotLottieProps<T extends DotLottie | DotLottieWorker> = Omit<Config, 'canvas'> &\n  ComponentProps<'canvas'> & {\n    animationId?: string;\n    /**\n     * A function that creates a `DotLottie` or `DotLottieWorker` instance.\n     */\n    createDotLottie: (config: T extends DotLottieWorker ? Config & { workerId?: string } : Config) => T;\n    /**\n     * A callback function that receives the `DotLottie` or `DotLottieWorker` instance.\n     *\n     * @example\n     * ```tsx\n     * const [dotLottie, setDotLottie] = useState<DotLottie | null>(null);\n     *\n     * <DotLottieReact\n     *   dotLottieRefCallback={setDotLottie}\n     * />\n     * ```\n     */\n    dotLottieRefCallback?: RefCallback<T | null>;\n    /**\n     * @deprecated The `playOnHover` property is deprecated.\n     * Instead, use the `onMouseEnter` and `onMouseLeave` events to control animation playback.\n     * Utilize the `dotLottieRefCallback` to access the `DotLottie` instance and invoke the `play` and `pause` methods.\n     *\n     * Example usage:\n     * ```tsx\n     * const [dotLottie, setDotLottie] = useState<DotLottie | null>(null);\n     *\n     * <DotLottieReact\n     *   dotLottieRefCallback={setDotLottie}\n     *   onMouseEnter={() => dotLottie?.play()}\n     *   onMouseLeave={() => dotLottie?.pause()}\n     * />\n     * ```\n     */\n    playOnHover?: boolean;\n    themeData?: string;\n    workerId?: T extends DotLottieWorker ? string : undefined;\n  };\n\nexport const BaseDotLottieReact = <T extends DotLottie | DotLottieWorker>({\n  animationId,\n  autoplay,\n  backgroundColor,\n  className,\n  createDotLottie,\n  data,\n  dotLottieRefCallback,\n  layout,\n  loop,\n  mode,\n  playOnHover,\n  renderConfig,\n  segment,\n  speed,\n  src,\n  stateMachineConfig,\n  stateMachineId,\n  style,\n  themeData,\n  themeId,\n  useFrameInterpolation,\n  workerId,\n  ...props\n}: BaseDotLottieProps<T> & {\n  createDotLottie: (config: T extends DotLottieWorker ? Config & { workerId?: string } : Config) => T;\n}): JSX.Element => {\n  const dotLottieRef = useRef<T | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const dotLottieRefCallbackRef = useRef<RefCallback<T | null> | undefined>(dotLottieRefCallback);\n\n  const config: Omit<Config, 'canvas'> & {\n    workerId?: T extends DotLottieWorker ? string : undefined;\n  } = {\n    speed,\n    mode,\n    loop,\n    useFrameInterpolation,\n    segment,\n    backgroundColor,\n    autoplay,\n    themeId,\n    workerId,\n    src,\n    data,\n    layout,\n    renderConfig,\n    animationId,\n    stateMachineConfig,\n    stateMachineId,\n  };\n\n  const configRef = useRef<Omit<BaseDotLottieProps<T>, 'createDotLottie' | 'dotLottieRefCallback'> | undefined>(config);\n\n  dotLottieRefCallbackRef.current = dotLottieRefCallback;\n  configRef.current = config;\n\n  const setCanvasRef = useCallback((canvas: HTMLCanvasElement | null) => {\n    canvasRef.current = canvas;\n\n    if (canvas) {\n      dotLottieRef.current = createDotLottie({\n        ...configRef.current,\n        canvas,\n      });\n    } else {\n      dotLottieRef.current?.destroy();\n      dotLottieRef.current = null;\n    }\n\n    dotLottieRefCallbackRef.current?.(dotLottieRef.current);\n  }, []);\n\n  useEffect(() => {\n    const handlePlayOnHover = (event: MouseEvent): void => {\n      if (!playOnHover) return;\n\n      if (event.type === 'mouseenter') {\n        dotLottieRef.current?.play();\n      }\n\n      if (event.type === 'mouseleave') {\n        dotLottieRef.current?.pause();\n      }\n    };\n\n    canvasRef.current?.addEventListener('mouseenter', handlePlayOnHover);\n    canvasRef.current?.addEventListener('mouseleave', handlePlayOnHover);\n\n    return () => {\n      canvasRef.current?.removeEventListener('mouseenter', handlePlayOnHover);\n      canvasRef.current?.removeEventListener('mouseleave', handlePlayOnHover);\n    };\n  }, [playOnHover]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setSpeed(speed ?? 1);\n  }, [speed]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setMode(mode ?? 'forward');\n  }, [mode]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setLoop(loop ?? false);\n  }, [loop]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setUseFrameInterpolation(useFrameInterpolation ?? true);\n  }, [useFrameInterpolation]);\n\n  useEffect(() => {\n    if (typeof segment?.[0] === 'number' && typeof segment[1] === 'number') {\n      dotLottieRef.current?.setSegment(segment[0], segment[1]);\n    } else {\n      // TODO: implement it for worker\n      // dotLottieRef.current?.resetSegment();\n    }\n  }, [segment]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setBackgroundColor(backgroundColor ?? '');\n  }, [backgroundColor]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setRenderConfig(renderConfig ?? {});\n  }, [JSON.stringify(renderConfig)]);\n\n  useEffect(() => {\n    if (typeof data !== 'string' && typeof data !== 'object') return;\n\n    dotLottieRef.current?.load({\n      data,\n      ...configRef.current,\n    });\n  }, [data]);\n\n  useEffect(() => {\n    if (typeof src !== 'string') return;\n\n    dotLottieRef.current?.load({\n      src,\n      ...configRef.current,\n    });\n  }, [src]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setMarker(props.marker ?? '');\n  }, [props.marker]);\n\n  useEffect(() => {\n    dotLottieRef.current?.loadAnimation(animationId ?? '');\n  }, [animationId]);\n\n  useEffect(() => {\n    if (typeof themeId === 'string') {\n      dotLottieRef.current?.setTheme(themeId);\n    } else {\n      // TODO: implement it for worker\n      // dotLottieRef.current?.resetTheme();\n    }\n  }, [themeId]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setThemeData(themeData ?? '');\n  }, [themeData]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setLayout(layout ?? {});\n  }, [layout?.fit, layout?.align && layout.align[0], layout?.align && layout.align[1]]);\n\n  useEffect(() => {\n    if (dotLottieRef.current?.isLoaded) {\n      if (typeof stateMachineId === 'string' && stateMachineId) {\n        const smLoaded = dotLottieRef.current.stateMachineLoad(stateMachineId);\n\n        if (smLoaded) {\n          dotLottieRef.current.stateMachineStart();\n        }\n      } else {\n        dotLottieRef.current.stateMachineStop();\n      }\n    }\n  }, [stateMachineId]);\n\n  useEffect(() => {\n    dotLottieRef.current?.stateMachineSetConfig(stateMachineConfig ?? null);\n  }, [stateMachineConfig]);\n\n  return (\n    <div\n      className={className}\n      {...(!className && {\n        style: {\n          width: '100%',\n          height: '100%',\n          lineHeight: 0,\n          ...style,\n        },\n      })}\n    >\n      <canvas\n        ref={setCanvasRef}\n        style={{\n          width: '100%',\n          height: '100%',\n        }}\n        {...props}\n      />\n    </div>\n  );\n};\n","'use client';\n\nimport type { Config } from '@lottiefiles/dotlottie-web';\nimport { DotLottie } from '@lottiefiles/dotlottie-web';\nimport type { JSX } from 'react';\n\nimport type { BaseDotLottieProps } from './base-dotlottie-react';\nimport { BaseDotLottieReact } from './base-dotlottie-react';\n\nexport type DotLottieReactProps = Omit<BaseDotLottieProps<DotLottie>, 'createDotLottie'>;\n\nconst createDotLottie = (config: Config): DotLottie => new DotLottie(config);\n\nexport const DotLottieReact = (props: DotLottieReactProps): JSX.Element => {\n  return <BaseDotLottieReact {...props} createDotLottie={createDotLottie} />;\n};\n","'use client';\n\nimport type { Config } from '@lottiefiles/dotlottie-web';\nimport { DotLottieWorker } from '@lottiefiles/dotlottie-web';\nimport type { JSX } from 'react';\n\nimport { BaseDotLottieReact } from './base-dotlottie-react';\nimport type { BaseDotLottieProps } from './base-dotlottie-react';\n\nexport type DotLottieWorkerReactProps = Omit<BaseDotLottieProps<DotLottieWorker>, 'createDotLottie'>;\n\nconst createDotLottieWorker = (config: Config & { workerId?: string }): DotLottieWorker => new DotLottieWorker(config);\n\nexport const DotLottieWorkerReact = (props: DotLottieWorkerReactProps): JSX.Element => {\n  return <BaseDotLottieReact {...props} createDotLottie={createDotLottieWorker} />;\n};\n","'use client';\n\nimport { DotLottie, DotLottieWorker } from '@lottiefiles/dotlottie-web';\n\nexport * from './dotlottie';\nexport type * from '@lottiefiles/dotlottie-web';\nexport * from './dotlottie-worker';\n\nexport const setWasmUrl = (url: string): void => {\n  DotLottieWorker.setWasmUrl(url);\n  DotLottie.setWasmUrl(url);\n};\n"]}